5- ¿Qué algoritmos se utilizan para resolver problemas modelados con lógica proposicional?

La lógica proposicional permite el uso de técnicas como encadenamiento, resolución y satisfacibilidad. Los algoritmos que se emplean operan sobre hechos atómicos y reglas lógicas simples con valores Verdadero o Falso, y son la base para construir sistemas de inferencia simples, robustos y eficientes. Los problemas pueden resolverse utilizando algoritmos de inferencia lógica, los cuales operan sobre oraciones atómicas y conectores lógicos booleanos (¬, ∧, ∨, ⇒).

Los algoritmos más utilizados son:

• Encadenamiento hacia adelante (forward chaining)

Este método aplica reglas de inferencia a hechos conocidos para derivar nuevos hechos hasta alcanzar una conclusión deseada. Es eficiente en bases de conocimiento con muchas reglas y pocos hechos iniciales.​ Es un proceso dirigido por hechos.

Se parte del conocimiento disponible (ground truth) y se aplican reglas de inferencia para derivar nuevos hechos hasta alcanzar un objetivo.

Se usa especialmente en bases de conocimiento con muchos hechos y pocas consultas.

En lógica proposicional, el encadenamiento se aplica frecuentemente sobre cláusulas de Horn, lo cual permite realizar inferencias de forma eficiente y determinista.

• Encadenamiento hacia atrás (backward chaining)
Dirigido por objetivos.

Se parte de una afirmación que se desea demostrar, y se buscan reglas que puedan derivarla. Es decir, comenzamos de una meta o conclusión y trabaja hacia atrás para verificar si los hechos disponibles la respaldan. Es útil cuando hay muchas posibles conclusiones y se desea verificar una específica.​

Las precondiciones de estas reglas se convierten en nuevas metas.

Se usa mucho en sistemas expertos basados en reglas como Prolog, que implementa este enfoque para lógica proposicional.

• Resolución proposicional
Es un método general y completo de inferencia basado en demostración por contradicción. Usa la forma normal conjuntiva (CNF) para aplicar una única regla de inferencia, la resolución, que es completa para la lógica proposicional.​ Es decir, convierte las oraciones a forma normal conjuntiva (CNF) y aplica reglas de resolución sobre literales complementarios hasta llegar a la cláusula vacía.

Es uno de los métodos fundamentales en pruebas automáticas de teoremas y sistemas de verificación formal.

• SAT Solvers (satisfacibilidad booleana)
Reescriben todo el problema como una fórmula proposicional y utilizan algoritmos eficientes (como DPLL o CDCL por ejebplo) para encontrar si hay una asignación de valores de verdad que la satisfaga.

Estos algoritmos determinan si existe una asignación de valores de verdad que satisfaga una fórmula proposicional. Sus mejoras modernas se utilizan ampliamente en aplicaciones prácticas.​

Usado en aplicaciones reales como verificación de software, diseño de hardware, planificación y resolución de puzzles.

• Tableaux semánticos
Es un método gráfico de análisis de validez lógica, que construye árboles de verdad para verificar si una fórmula es satisfacible o si una inferencia es válida. Aunque es más didáctico, proporciona una comprensión visual del proceso de inferencia.​

Es menos usado computacionalmente, pero es útil como herramienta didáctica o también en asistentes de pruebas automáticas.


6- ¿Qué valores puede tomar una oración atómica de acuerdo a la lógica de primer orden? ¿Cómo se modela la frase “Los valores de A comprendidos entre 0 y 9” de acuerdo a esta sintaxis?

Una oración atómica en LPO también puede ser únicamente Verdadera (V) o Falsa (F), pero a diferencia de la lógica proposicional, las oraciones atómicas tienen estructura interna ya que se representan mediante predicados aplicados a términos (constantes, variables, funciones). Es decir, la lógica de primer orden permite una representación más rica mediante el uso de predicados, funciones y cuantificadores.​

Son expresiones del tipo:
predicado(término1, término2, ... , términoN)

Donde los términos pueden ser constantes, variables o funciones.​

Permiten incluir variables, constantes, funciones y cuantificadores.

Esto las hace más expresivas, ya que se puede razonar sobre relaciones, propiedades, objetos y estructuras complejas, cosa que en la lógica proposicional requeriría múltiples proposiciones separadas.

Ahora modelaremos la frase “Los valores de A comprendidos entre 0 y 9”:

En lógica de primer orden, esta frase se puede modelar de manera más generalizada y reutilizable que en lógica proposicional. Existen varias formas de expresar esta restricción:

1- Usando predicados definidos en el dominio
Se puede definir un predicado rango(A) que sea verdadero solo si A está dentro del rango:
rango(A) :- A >= 0, A =< 9.

2- Usando cuantificadores
También puede expresarse formalmente mediante cuantificadores, si se quiere expresar que "todos los valores A válidos están en el rango":
∀A ( (A ≥ 0 ∧ A ≤ 9) ⇒ en_rango(A) )
Esta expresión indica que, para todo A, si A está entre 0 y 9, entonces A pertenece al rango.

3- En un lenguaje como Prolog:
Podría representarse como una regla o un conjunto de hechos válidos:
valor_valido(A) :- between(0, 9, A).
Esta regla define que A es un valor válido si está entre 0 y 9. Entonces, permite que cualquier consulta a valor_valido(X) devuelva únicamente aquellos valores que están dentro del rango, (entre 0 y 9 para nuestro caso) haciendo posible generalizar esta lógica en distintas partes del sistema sin redefinir reglas individuales.

Estas representaciones muestran cómo la lógica de primer orden permite expresar relaciones y restricciones de manera más natural y compacta que la lógica proposicional.​

En lógica de primer orden, aunque las oraciones atómicas siguen siendo Verdaderas o Falsas, tienen una estructura que permite modelar relaciones numéricas y restricciones como rangos de forma más natural y compacta. Esto permite una representación más escalable, legible y reutilizable, ideal para dominios donde las proposiciones simples ya no son suficientes.

